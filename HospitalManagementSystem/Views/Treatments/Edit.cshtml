@model HospitalManagementSystem.Models.Treatment

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutDoc.cshtml";
}

<head>
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
        <link href="~/Content/Styles.css" rel="stylesheet" />
        <link href="~/Content/bootstrap.css" rel="stylesheet">
        <link href="~/Content/bootstrap-theme.css" rel="stylesheet">
</head>
<h2>Edit Treatment Details</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Treatment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TreatmentID)

        <div class="form-group">
            @Html.LabelFor(model => model.PatientID, "PatientID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PatientID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PatientID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CheckupDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CheckupDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CheckupDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Symptoms, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Symptoms, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Symptoms, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Diagnosis, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Diagnosis, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Diagnosis, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Medicine, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Medicine, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Medicine, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Doses, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (@ViewBag.n == 1)
                {
                    @Html.DropDownList("Doses", new List<SelectListItem>
                    {
                        new SelectListItem{Text="1-0-0",Value="1-0-0",Selected=true},
                        new SelectListItem{Text="0-1-0",Value="0-1-0"},
                        new SelectListItem{Text="0-0-1",Value="0-0-1"},
                        new SelectListItem{Text="1-1-0",Value="1-1-0"},
                        new SelectListItem{Text="0-1-1",Value="0-1-1"},
                        new SelectListItem{Text="1-0-1",Value="1-0-1"},
                        new SelectListItem{Text="1-1-1",Value="1-1-1"}
                    })
                }
                else if (@ViewBag.n == 2)
                {
                    @Html.DropDownList("Doses", new List<SelectListItem>
                            {
                                new SelectListItem{Text="1-0-0",Value="1-0-0"},
                                new SelectListItem{Text="0-1-0",Value="0-1-0",Selected=true},
                                new SelectListItem{Text="0-0-1",Value="0-0-1"},
                                new SelectListItem{Text="1-1-0",Value="1-1-0"},
                                new SelectListItem{Text="0-1-1",Value="0-1-1"},
                                new SelectListItem{Text="1-0-1",Value="1-0-1"},
                                new SelectListItem{Text="1-1-1",Value="1-1-1"}
                           })
                }
                else if (@ViewBag.n == 3)
                {
                    @Html.DropDownList("Doses", new List<SelectListItem>
                             {
                                 new SelectListItem{Text="1-0-0",Value="1-0-0"},
                                 new SelectListItem{Text="0-1-0",Value="0-1-0"},
                                 new SelectListItem{Text="0-0-1",Value="0-0-1",Selected=true},
                                 new SelectListItem{Text="1-1-0",Value="1-1-0"},
                                 new SelectListItem{Text="0-1-1",Value="0-1-1"},
                                 new SelectListItem{Text="1-0-1",Value="1-0-1"},
                                 new SelectListItem{Text="1-1-1",Value="1-1-1"}
                            })
                }
                else if (@ViewBag.n == 4)
                {
                    @Html.DropDownList("Doses", new List<SelectListItem>
                            {
                                new SelectListItem{Text="1-0-0",Value="1-0-0"},
                                new SelectListItem{Text="0-1-0",Value="0-1-0"},
                                new SelectListItem{Text="0-0-1",Value="0-0-1"},
                                new SelectListItem{Text="1-1-0",Value="1-1-0",Selected=true},
                                new SelectListItem{Text="0-1-1",Value="0-1-1"},
                                new SelectListItem{Text="1-0-1",Value="1-0-1"},
                                new SelectListItem{Text="1-1-1",Value="1-1-1"}
                           })
                }
                else if (@ViewBag.n == 5)
                {
                    @Html.DropDownList("Doses", new List<SelectListItem>
                             {
                                 new SelectListItem{Text="1-0-0",Value="1-0-0"},
                                 new SelectListItem{Text="0-1-0",Value="0-1-0"},
                                 new SelectListItem{Text="0-0-1",Value="0-0-1"},
                                 new SelectListItem{Text="1-1-0",Value="1-1-0"},
                                 new SelectListItem{Text="0-1-1",Value="0-1-1"},
                                 new SelectListItem{Text="1-0-1",Value="1-0-1",Selected=true},
                                 new SelectListItem{Text="1-1-1",Value="1-1-1"}
                            })
                }
                else if (@ViewBag.n == 6)
                {
                    @Html.DropDownList("Doses", new List<SelectListItem>
                            {
                                new SelectListItem{Text="1-0-0",Value="1-0-0"},
                                new SelectListItem{Text="0-1-0",Value="0-1-0"},
                                new SelectListItem{Text="0-0-1",Value="0-0-1"},
                                new SelectListItem{Text="1-1-0",Value="1-1-0"},
                                new SelectListItem{Text="0-1-1",Value="0-1-1",Selected=true},
                                new SelectListItem{Text="1-0-1",Value="1-0-1"},
                                new SelectListItem{Text="1-1-1",Value="1-1-1"}
                           })
                }
                else
                {
                    @Html.DropDownList("Doses", new List<SelectListItem>
                            {
                                new SelectListItem{Text="1-0-0",Value="1-0-0"},
                                new SelectListItem{Text="0-1-0",Value="0-1-0"},
                                new SelectListItem{Text="0-0-1",Value="0-0-1"},
                                new SelectListItem{Text="1-1-0",Value="1-1-0"},
                                new SelectListItem{Text="0-1-1",Value="0-1-1"},
                                new SelectListItem{Text="1-0-1",Value="1-0-1"},
                                new SelectListItem{Text="1-1-1",Value="1-1-1",Selected=true}
                           })
                }
                @Html.ValidationMessageFor(model => model.Doses, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BeforeMeal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (ViewBag.n == 1)
                {
                    @Html.RadioButton("RbBeforeMeal", "Yes", isChecked: true) @Html.Label("Yes")
                    @Html.RadioButton("RbBeforeMeal", "No") @Html.Label("No")
                }
                else
                {
                    @Html.RadioButton("RbBeforeMeal", "Yes") @Html.Label("Yes")
                    @Html.RadioButton("RbBeforeMeal", "No", isChecked: true) @Html.Label("No")
                }

                @Html.ValidationMessageFor(model => model.BeforeMeal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Advice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Advice, new { htmlAttributes = new { @class = "form-control" } })            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <button onclick="location.href='@Url.Action("ExistingPatientREport","Patients",new { id=Model.TreatmentID})';return false;" class="btn btn-dark">Back To List</button>
</div>
