@model HospitalManagementSystem.Models.Treatment

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutDoc.cshtml";
}
<head>
    <style>
        .form-rounded {
            border-radius:.5rem;
        }
    </style>
</head>
    <div class="min-vh-100">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4> New Treatment</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.PatientID, "PatientID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PatientID, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.PatientID } })
                        @Html.ValidationMessageFor(model => model.PatientID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br/>
                <div class="form-group">
                    @Html.LabelFor(model => model.CheckupDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CheckupDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CheckupDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br/>
                <div class="form-group">
                    @Html.LabelFor(model => model.Symptoms, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Symptoms,3,55 ,new { htmlAttributes = new { @class = "form-control form-rounded"} })
                        @Html.ValidationMessageFor(model => model.Symptoms, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br/>
                <div class="form-group">
                    @Html.LabelFor(model => model.Diagnosis, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Diagnosis, 3,55,new { htmlAttributes = new { @class = "form-control form-rounded" } })
                        @Html.ValidationMessageFor(model => model.Diagnosis, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br/>
                <div class="form-group">
                    @Html.LabelFor(model => model.Medicine, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Medicine, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Medicine, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br/>
                <div class="form-group">
                    @Html.LabelFor(model => model.Doses, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Doses", new List<SelectListItem>
                                     {
                                         new SelectListItem{Text="1-0-0",Value="1-0-0"},
                                         new SelectListItem{Text="0-1-0",Value="0-1-0"},
                                         new SelectListItem{Text="0-0-1",Value="0-0-1"},
                                         new SelectListItem{Text="1-1-0",Value="1-1-0"},
                                         new SelectListItem{Text="0-1-1",Value="0-1-1"},
                                         new SelectListItem{Text="1-0-1",Value="1-0-1"},
                                         new SelectListItem{Text="1-1-1",Value="1-1-1"}
                                    })
                        @Html.ValidationMessageFor(model => model.Doses, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br/>
                <div class="form-group">
                    @Html.LabelFor(model => model.BeforeMeal, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.RadioButton("RbBeforeMeal", "Yes", isChecked: true) @Html.Label("Yes")
                        @Html.RadioButton("RbBeforeMeal", "No", isChecked: false) @Html.Label("No")

                        @Html.ValidationMessageFor(model => model.BeforeMeal, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br/>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" style="font-size:14px;" class="btn btn-dark" />
                    </div>
                </div>
            </div>
        }
        <br/>
        <br/>
        <div>
            <button onclick="location.href='@Url.Action("PatientList","Patients")';return false;" style="font-size:14px;"class="btn btn-dark">Back To List</button>
        </div>
    </div>