@model HospitalManagementSystem.Models.Patient

@{
    ViewBag.Title = "Edit";
    @if (ViewBag.layout == 2)
    {
        Layout = "~/Views/Shared/_LayoutRecep.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";

    }
}
<head>
    <style>
        .btn-patient,
        .btn-patient:visited,
        .btn-patient:hover,
        .btn-patient:focus {
            background-color: #e9e4e2 !important;
            border-color: #e9e4e2 !important;
        }

            .btn-patient:active {
                background-color: darkgrey !important;
                border-color: darkgrey !important;
                color: grey !important;
            }
    </style>
</head>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal min-vh-100">
    <br />
    <h4>Edit Patient Info</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.PatientID)

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBox("DOB", "", "", new { @class = "form-control", @Value = @ViewBag.d })
            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BloodGroup, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BloodGroup, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BloodGroup, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (ViewBag.n == 1)
            {

                @Html.RadioButton("RbGender", "Male", isChecked: true) @Html.Label("Male")
                @Html.RadioButton("RbGender", "Female", isChecked: false) @Html.Label("Female")
            }
            else
            {
                @Html.RadioButton("RbGender", "Male", isChecked: false) @Html.Label("Male")
                @Html.RadioButton("RbGender", "Female", isChecked: true) @Html.Label("Female")
            }
            @Html.ValidationMessageFor(model => model.BloodGroup, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" style="font-size:14px;" class="btn btn-patient" />
        </div>
    </div>

    <div>
        <button onclick="location.href='@Url.Action("Index","",new { l=2})';return false;" style="font-size:14px;" class="btn btn-dark">Back To List</button>
    </div>
</div>

}
